name: Build container image

on:
  workflow_call:
    inputs:
      push-image:
        type: boolean
        required: true
    outputs:
      repository:
        description: "Repository used to build the container image"
        value: ${{ jobs.build.outputs.repository }}
      tag:
        description: "Tag used to build the container image"
        value: ${{ jobs.build.outputs.tag }}
      artifact:
        description: "Uploaded artifact with the container tarball"
        value: ${{ jobs.build.outputs.artifact }}
      digest:
        description: "Image digest"
        value: ${{ jobs.build.outputs.digest }}

jobs:
  build:
    name: Build container image
    permissions:
      packages: write
      id-token: write # to mint the OIDC token for Sigstore signatures
    runs-on: ubuntu-latest
    outputs:
      repository: ${{ steps.setoutput.outputs.repository }}
      tag: ${{ steps.setoutput.outputs.tag }}
      artifact: ${{ steps.setoutput.outputs.artifact }}
      digest: ${{ steps.setoutput.outputs.digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0
      - name: Install cosign
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Retrieve tag name (main branch)
        if: ${{ startsWith(github.ref, 'refs/heads/main') }}
        run: |
          echo TAG_NAME=latest >> $GITHUB_ENV
      - name: Retrieve tag name (feat branch)
        if: ${{ startsWith(github.ref, 'refs/heads/feat') }}
        run: |
          echo "TAG_NAME=latest-$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
      - name: Retrieve tag name (tag)
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        run: |
          echo TAG_NAME=$(echo $GITHUB_REF | sed -e "s|refs/tags/||") >> $GITHUB_ENV
      - name: Build and push container image
        if: ${{ inputs.push-image }}
        id: build-image
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64, linux/arm64
          push: true
          sbom: true
          provenance: mode=max
          tags: |
            ghcr.io/${{github.repository_owner}}/kubewarden-controller:${{ env.TAG_NAME }}
      - name: Sign container image
        if: ${{ inputs.push-image }}
        run: |
          cosign sign --yes \
            ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ steps.build-image.outputs.digest }}

          cosign verify \
            --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            --certificate-identity="https://github.com/${{github.repository_owner}}/kubewarden-controller/.github/workflows/container-image.yml@${{ github.ref }}" \
            ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ steps.build-image.outputs.digest }}

      - # Only build amd64 because buildx does not allow multiple platforms when
        # exporting the image to a tarball. As we use this only for end-to-end tests
        # and they run on amd64 arch, let's skip the arm64 build for now.
        name: Build linux/amd64 container image
        if: ${{ inputs.push-image == false }}
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          sbom: true
          provenance: mode=max
          outputs: type=docker,dest=/tmp/kubewarden-controller-image-${{ env.TAG_NAME }}.tar
          tags: |
            ghcr.io/${{github.repository_owner}}/kubewarden-controller:${{ env.TAG_NAME }}
      - name: Upload container image to use in other jobs
        if: ${{ inputs.push-image == false }}
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: kubewarden-controller-image-${{ env.TAG_NAME }}
          path: /tmp/kubewarden-controller-image-${{ env.TAG_NAME }}.tar
      - id: setoutput
        name: Set output parameters
        run: |
          echo "repository=ghcr.io/${{github.repository_owner}}/kubewarden-controller" >> $GITHUB_OUTPUT
          echo "tag=${{ env.TAG_NAME }}" >> $GITHUB_OUTPUT
          echo "artifact=kubewarden-controller-image-${{env.TAG_NAME}}" >> $GITHUB_OUTPUT
          echo "digest=${{ steps.build-image.outputs.digest }}" >> $GITHUB_OUTPUT
