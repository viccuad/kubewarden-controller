name: Sign attestation files

on:
  workflow_call:
    inputs:
      image-digest:
        type: string
        required: true

jobs:
  sbom:
    name: Generate SBOM, sign and attach them to OCI image
    strategy:
      matrix:
        arch: [amd64, arm64]

    permissions:
      packages: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Install cosign
        uses: sigstore/cosign-installer@4959ce089c160fddf62f7b42464195ba1a56d382 # v3.6.0

      - name: Install the syft command
        uses: kubewarden/github-actions/syft-installer@d94509d260ee11a92b4f65bc0acd297feec24d7f # v3.3.5

      - name: Install the crane command
        uses: kubewarden/github-actions/crane-installer@d94509d260ee11a92b4f65bc0acd297feec24d7f # v3.3.5

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Find platform digest
        shell: bash
        run: |
          set -e
          DIGEST=$(crane digest \
            --platform "linux/${{ matrix.arch }}" \
            ghcr.io/${{ github.repository_owner }}/kubewarden-controller@${{ inputs.image-digest }})
          echo "PLATFORM_DIGEST=${DIGEST}" >> "$GITHUB_ENV"

      - name: Find attestation digest
        run: |
          set -e
          DIGEST=$(crane manifest ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ inputs.image-digest }} \
            | jq '.manifests[] | select(.annotations["vnd.docker.reference.type"]=="attestation-manifest") | select(.annotations["vnd.docker.reference.digest"]=="${{ env.PLATFORM_DIGEST }}") | .digest'
          )
          echo "ATTESTATION_MANIFEST_DIGEST=${DIGEST}" >> "$GITHUB_ENV"

      - name: Sign attestation manifest
        run: |
          cosign sign --yes \
            ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ env.ATTESTATION_MANIFEST_DIGEST}}

          cosign verify --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            --certificate-identity-regexp="https://github.com/${{github.repository_owner}}/kubewarden-controller*"  \
            ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ env.ATTESTATION_MANIFEST_DIGEST}}

      - name: Find provenance manifest digest
        run: |
          set -e
          DIGEST=$(crane manifest ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ env.ATTESTATION_MANIFEST_DIGEST}} | \
            jq '.layers[] | select(.annotations["in-toto.io/predicate-type"] == "https://slsa.dev/provenance/v0.2") | .digest')
          echo "PROVENANCE_DIGEST=${DIGEST}" >> "$GITHUB_ENV"

      - name: Sign provenance manifest
        run: |
          cosign sign --yes \
          ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ env.PROVENANCE_DIGEST}}

          cosign verify --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            --certificate-identity-regexp="https://github.com/${{github.repository_owner}}/kubewarden-controller*"  \
            ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ env.PROVENANCE_DIGEST}}

      - name: Find SBOM manifest digest
        run: |
          set -e
          DIGEST=$(crane manifest ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ env.ATTESTATION_MANIFEST_DIGEST}} |  \
            jq '.layers[] | select(.annotations["in-toto.io/predicate-type"] == "https://spdx.dev/Document") | .digest')
          echo "SBOM_DIGEST=${DIGEST}" >> "$GITHUB_ENV"

      - name: Sign SBOM manifest
        run: |
          cosign sign --yes \
          ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ env.SBOM_DIGEST}}

          cosign verify --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            --certificate-identity-regexp="https://github.com/${{github.repository_owner}}/kubewarden-controller*"  \
            ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ env.SBOM_DIGEST}}

      - name: Download provenance and SBOM files
        run: |
          set -e
          crane blob ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ env.PROVENANCE_DIGEST}} > kubewarden-controller-attestation-${{ matrix.arch }}-provenance.json
          crane blob ghcr.io/${{github.repository_owner}}/kubewarden-controller@${{ env.SBOM_DIGEST}} > kubewarden-controller-attestation-${{ matrix.arch }}-sbom.json

      - name: Sign provenance and SBOM files
        run: |
          cosign sign-blob --yes \
            --output-certificate kubewarden-controller-attestation-${{ matrix.arch }}-provenance.cert \
            --output-signature kubewarden-controller-attestation-${{ matrix.arch }}-provenance.sig \
            kubewarden-controller-attestation-${{ matrix.arch }}-provenance.json

          cosign verify-blob --certificate kubewarden-controller-attestation-${{ matrix.arch }}-provenance.cert \
            --signature kubewarden-controller-attestation-${{ matrix.arch }}-provenance.sig \
            --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            --certificate-identity-regexp="https://github.com/${{github.repository_owner}}/kubewarden-controller*" \
            kubewarden-controller-attestation-${{ matrix.arch }}-provenance.json

          cosign sign-blob --yes \
            --output-certificate kubewarden-controller-attestation-${{ matrix.arch }}-sbom.cert \
            --output-signature kubewarden-controller-attestation-${{ matrix.arch }}-sbom.sig \
            kubewarden-controller-attestation-${{ matrix.arch }}-provenance.json

          cosign verify-blob --certificate kubewarden-controller-attestation-${{ matrix.arch }}-sbom.cert \
            --signature kubewarden-controller-attestation-${{ matrix.arch }}-sbom.sig \
            --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            --certificate-identity-regexp="https://github.com/${{github.repository_owner}}/kubewarden-controller*" \
            kubewarden-controller-attestation-${{ matrix.arch }}-sbom.json

      - name: Upload SBOMs as artifacts
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: attestation-${{ matrix.arch }}
          path: kubewarden-controller-attestation-${{ matrix.arch }}*
